services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: uptime
      POSTGRES_PASSWORD: uptime
      POSTGRES_DB: uptime
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes: [ "db-data:/var/lib/postgresql/data" ]

  api:
    image: python:3.13-slim
    working_dir: /app
    volumes:
      - ./apps/api:/app
    environment:
      DATABASE_URL: postgresql+psycopg://uptime:uptime@db:5432/uptime
      WEB_ORIGIN: http://localhost:3000
      PYTHONUNBUFFERED: "1"
      PIP_ROOT_USER_ACTION: "ignore"
    depends_on:
      db:
        condition: service_healthy
    ports: ["8000:8000"]
    command: >
      bash -lc "
        apt-get update &&
        apt-get install -y --no-install-recommends build-essential libpq-dev &&
        rm -rf /var/lib/apt/lists/* &&
        pip install --no-cache-dir -U pip &&
        pip install --no-cache-dir poetry &&
        poetry config virtualenvs.create false &&
        poetry install --no-interaction --no-ansi --no-root &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  web:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./apps/web:/app
      - web-node-modules:/app/node_modules
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
    ports: ["3000:3000"]
    depends_on: [ api ]
    command: sh -c "npm install && npm run dev"

volumes:
  db-data:
  web-node-modules:
